// Generated by CoffeeScript 1.3.3
(function() {
  var MainConfig, path, readConfig;

  path = require("path");

  readConfig = function(f, cb) {
    var m;
    try {
      m = require(f);
      return cb(null, m);
    } catch (e) {
      console.log("BAD", e);
      throw e;
      return cb(e);
    }
  };

  MainConfig = (function() {

    function MainConfig(_arg) {
      var layer, layers, name;
      this.start = _arg.start, this.install = _arg.install, this.cron = _arg.cron, layers = _arg.layers;
      this.servers = [];
      for (name in layers) {
        layer = layers[name];
        this.layers[name] = this.normalizeLayer(layer);
      }
    }

    MainConfig.prototype.getLayerByName = function(name) {
      return this.layer[name] || (function() {
        throw new Error("Cannot find server named " + name + ". Check your config file");
      })();
    };

    MainConfig.prototype.getStart = function() {
      return this.start;
    };

    MainConfig.prototype.getInstall = function() {
      return this.install;
    };

    MainConfig.prototype.getLayerNames = function() {
      return Object.keys(this.layers);
    };

    MainConfig.prototype.getCron = function() {
      if (!(typeof this.cron === "function" ? this.cron(false) : void 0)) {

      } else {
        return this.normalizeCron(this.cron);
      }
    };

    MainConfig.prototype.normalizeCron = function(cron) {
      var matches, warning;
      if (typeof cron === "string") {
        console.log("using deprecated cron syntax");
        matches = cron.match(/([0-9\s\*]+)\s+(.*)/);
        if (!(matches != null)) {
          throw new Error("Invalid Cron: " + this.cron);
        }
        warning = "you should switch your cron to instead be the following in ggg.js:\n  cron: {name: \"cronName\", time: " + matches[1] + ", command: " + matches[2] + " }";
        console.log(warning);
        cron = [
          {
            name: "default",
            time: matches[1],
            command: matches[2]
          }
        ];
      } else if (!Array.isArray(cron)) {
        cron = [cron];
      }
      return cron;
    };

    MainConfig.prototype.normalizeLayer = function(config) {
      if (typeof config === "string") {
        config = {
          hosts: [config]
        };
      } else if (Array.isArray(config)) {
        config = {
          hosts: config
        };
      } else if (typeof config.hosts === "string") {
        config.hosts = [config.hosts];
      }
      return config;
    };

    return MainConfig;

  })();

  MainConfig.loadFromFile = function(file, cb) {
    return readConfig(file, function(err, config) {
      if (err != null) {
        return cb(err);
      }
      return cb(null, new MainConfig(config));
    });
  };

  module.exports = MainConfig;

}).call(this);
